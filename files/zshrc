# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME=powerlevel10k/powerlevel10k
VIRTUAL_ENV_DISABLE_PROMPT=true

export EDITOR=nvim

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias gs="g status"
alias glff="git pull --ff-only"
alias glffc="git pull origin \$(current_branch) --ff-only"
alias glc="git pull origin \$(current_branch)"
alias gpc="git push origin \$(current_branch)"
alias gpcfl="git push origin \$(current_branch) --force-with-lease"
function goops { git add -A "$@" && git commit --amend --no-edit && gpcfl }
alias gbr="git branch -r"
alias gbrm="git branch --merged | grep -v \"\*\" | xargs -n 1 git branch -d"
alias copy-pr-link="gh pr view --json url --jq '.url' | pbcopy"
alias tracert="traceroute"
alias grep="grep --color=always"
alias vimrc='$EDITOR ~/.vimrc'
alias zshrc='$EDITOR ~/.zshrc'
alias tmuxconf='$EDITOR ~/.tmux.conf'
alias weather='curl wttr.in/Edinburgh'
alias work='$EDITOR .'
function unfuck-audio() {
  sudo kill -9 $(ps ax|grep 'coreaudio[a-z]' | awk '{print $1}')
}

# Docker aliases
COMPOSE='docker-compose'
DOCKER='docker'
alias dcu='$COMPOSE up'
alias dcb='$COMPOSE build'
alias dcd='$COMPOSE down'
alias db='$DOCKER build .'
alias dl='$DOCKER pull'
alias dps='$DOCKER ps'
alias de='$DOCKER exec'


export UPDATE_ZSH_DAYS=1
HIST_IGNORE_SPACE="true"

# Activate vim mode
export MODE_INDICATOR='[NORMAL]'
export KEYTIMEOUT=10
bindkey -v
bindkey -M viins 'jk' vi-cmd-mode
bindkey '^[[Z' reverse-menu-complete # Unbreak shift-tab

if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export ZDOTDIR=$HOME
export PIP_REQUIRE_VIRTUALENV=true

# Explicitly before plugins to allow ~/.zsh_local to append plugins
export ZSH_PLUGINS="npm zsh-autosuggestions zsh-syntax-highlighting git vagrant bundler macos colored-man-pages vi-mode docker"
if [ -f ~/.zsh_local ]; then
    source ~/.zsh_local
fi

plugins=(`echo $ZSH_PLUGINS`)

# After plugins load to override other `d`
alias d='$DOCKER'
alias dc='$COMPOSE'

function mkdataenv() {
  mkvirtualenv --python `pyenv which python` $1
  workon $1
  mkdir "$1"
  cd $1
  pip install pandas jupyter numpy matplotlib seaborn
  pip freeze > requirements.txt
  jupyter notebook
}
vsc () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}
_has() {
  return $( whence $1 >/dev/null )
}

# From https://jezenthomas.com/free-internet-on-trains/
function remac {
  sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z
  sudo ifconfig en0 ether $(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//')
  sudo networksetup -detectnewhardware
  echo $(ifconfig en0 | grep ether)
}

function tmux-init() {
  tmux ls && read tmux_session && tmux attach -t ${tmux_session:-default} || tmux new -s ${tmux_session:-default}
}

function mkb() {
  git fetch && git checkout -b "$1" origin/master
}

function browse-crate() {
  if [ "$#" -ne 2 ] && [ "$#" -ne 1 ]
  then
    echo "Usage:\nbrowse-crate {crate} {version}\nbrowse-crate {crate}"
    return 1
  fi
  # I have no idea what this hash in the path is, but this is what it is
  # on my machine
  crates_base_path="~/.cargo/registry/src/github.com-1ecc6299db9ec823"

  crate=$1
  crate_path=""

  if [ "$#" -eq 1 ]
  then
    crate_path=`FZF_DEFAULT_COMMAND="fd -d 1 \"$crate-[\d\.]\" $crates_base_path" fzf-tmux -1`
  else 
    crate_path="$crates_base_path/$crate-$2"
  fi

  if [ -n "$crate_path" ] 
  then
    nvim -c ":cd $crate_path" "$crate_path"
  fi
}

source $ZSH/oh-my-zsh.sh

# fzf via Homebrew
if [ -e /usr/local/opt/fzf/shell/completion.zsh ]; then
  source /usr/local/opt/fzf/shell/key-bindings.zsh
  source /usr/local/opt/fzf/shell/completion.zsh
fi

# fzf via local installation
if [ -e ~/.fzf ]; then
  _append_to_path ~/.fzf/bin
  source ~/.fzf/shell/key-bindings.zsh
  source ~/.fzf/shell/completion.zsh
fi

# fzf + ag configuration
if _has fzf && _has rg; then
  export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_DEFAULT_OPTS='
  --color fg:242,bg:236,hl:65,fg+:15,bg+:239,hl+:108
  --color info:108,prompt:109,spinner:108,pointer:168,marker:168
  '
fi
FZF_TMUX_OPTS='-d 20%'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


export GPG_TTY=$(tty)
export SSH_AUTH_SOCK=$HOME/.gnupg/S.gpg-agent.ssh
gpgconf --launch gpg-agent

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"  # This loads nvm

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

eval "$(zoxide init zsh)"
