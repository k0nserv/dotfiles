set nocompatible               " be eMproved
filetype off                   " required!

" Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'

" Language Support
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'vim-ruby/vim-ruby'
Plugin 'keith/swift.vim'
Plugin 'kchmck/vim-coffee-script'
Plugin 'pangloss/vim-javascript'
Bundle 'slim-template/vim-slim.git'
Plugin 'mxw/vim-jsx'
Plugin 'plasticboy/vim-markdown'

" Misc
Plugin 'w0rp/ale'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'vim-airline/vim-airline'
Plugin 'Valloric/YouCompleteMe'
Plugin 'airblade/vim-gitgutter'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'rizzatti/dash.vim'

" Color Schemes
Plugin 'altercation/vim-colors-solarized'
call vundle#end()

set number
set shell=/bin/zsh\ -l
syntax on
filetype plugin indent on
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set backspace=indent,eol,start
set cursorline
set noswapfile
set background=dark
set smartcase
let mapleader = ','
colorscheme solarized
set list
set listchars=eol:¬

" Remap
vnoremap . :norm.<CR>
inoremap jk <ESC>

" Windows
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Movement
nnoremap J 6j
nnoremap K 6k
nnoremap H 6h
nnoremap L 6l

" Buffers
set hidden
nmap <leader>T :enew<CR>
nmap <leader>l :bnext<CR>
nmap <leader>h :bprevious<CR>
nmap <leader>bl :ls<CR>

set ruler
set colorcolumn=120

" vim-airline
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
      let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 1
let g:airline_theme = 'powerlineish'

" Ignores for Ctrlp
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
let g:ctrlp_working_path_mode = 'r'
nmap <leader>bb :CtrlPBuffer<cr>

" You complete me
let g:ycm_autoclose_preview_window_after_completion=1
nnoremap <C-I> :CtrlPBufTag<CR>
let g:ycm_server_keep_logfiles=1

" Clipboard
map <F2> :.w !pbcopy<CR><CR>
map <F3> :r !pbpaste<CR>

" Strip whitespace on save
autocmd BufWritePre * :%s/\s\+$//e


" Ignores for NERDTree
let NERDTreeIgnore = ['\.pyc$']
nnoremap <silent> <F8> :NERDTreeToggle<CR>

" Dash
nmap <silent> <leader>d <Plug>DashSearch

" vim-jsx
let g:jsx_ext_required = 0
set lazyredraw

let g:ycm_filetype_specific_completion_to_disable = {
  \'ruby': 1
  \}

" Ale
"let g:ale_python_flake8_args="flake8"
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'python': ['flake8'],
\}
let g:ale_sign_column_always = 1
let g:ale_sign_error='✘'
let g:ale_sign_warning='▲'

let g:ale_echo_msg_error_str = '✘'
let g:ale_echo_msg_warning_str = '▲'
let g:ale_echo_msg_format = '%severity% [%linter%] %s'

let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']

let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_enter = 1
let g:ale_open_list = 0


augroup ft_rb
    au!
    " fix the SLOOOW syntax highlighting
    au FileType ruby setlocal re=1 foldmethod=manual nocursorline
augroup END
